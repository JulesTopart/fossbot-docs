{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"FOSSBot Documentation","text":"<p>Welcome to the temporary FOSSBot documentation!  FOSSBot is an open-source, two-wheeled educational robot designed by GFOSS and Harokopio University of Athens. It is customizable, affordable, and ideal for STEM education at all levels.</p> <p></p>"},{"location":"#what-is-fossbot","title":"What is FOSSBot?","text":"<p>FOSSBot is a small, customizable robot that helps people learn about technology, coding, engineering and many more topics. It\u2019s designed to be easy to build and program, so anyone can start experimenting with robotics, even if they have no prior experience. As the project is still under active development, some features may not be 100% functional.</p>"},{"location":"#how-does-it-work","title":"How does it work?","text":"<p>At the heart of FOSSBot is its \u201cbrain\u201d \u2014 a tiny computer called a Raspberry Pi Zero. This is where all the robot\u2019s decisions are made, whether it\u2019s moving forward, turning, or following instructions programmed by you. </p> <p>The robot senses the world around it using sensors like a distance sensors, light sensors\u2026</p> <p>You can control FOSSBot in different ways:</p> <ul> <li>No-code mode for complete beginners (using Blockly)</li> <li>Block-based programming (where you drag and drop instructions)</li> <li>Python coding for more advanced users</li> </ul>"},{"location":"#what-can-you-do-with-fossbot","title":"What can you do with FOSSBot?","text":"<p>With FOSSBot, you can:</p> <ul> <li>Program the robot to draw pictures using its built-in pencil holder</li> <li>Explore coding by creating simple or complex tasks for it to perform</li> <li>Learn how different sensors work and how robots navigate their environment</li> </ul> <p>FOSSBot is perfect for schools, coding workshops, or even at home as a fun project.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Affordable and customizable: FOSSBot is made from 3D-printed parts and low-cost electronics, so it\u2019s easy to build and fix. You can print the robot\u2019s body yourself and adjust it to your liking.</li> <li>Durable and flexible: The robot\u2019s plastic parts are strong and designed to protect its wheels and sensors.</li> <li>LEGO-compatible: You can add LEGO bricks to the robot, making it even more fun to customize and expand.</li> <li>Learning-friendly: FOSSBot supports no-coding, block-based coding, and full Python programming, making it suitable for all skill levels.</li> </ul>"},{"location":"#how-its-built","title":"How it\u2019s built","text":"<p>The robot is made up of:</p> <ul> <li>3D-printed plastic parts: You can download the designs and print them yourself, using strong materials that keep everything secure.</li> <li>Electronic components: The robot uses motors for the wheels, sensors for detecting movement, and an LED for visual feedback.</li> <li>Raspberry Pi computer: This is the robot\u2019s \u201cbrain\u201d where all the thinking happens. It runs a special operating system and software that lets you control and program the robot.</li> </ul>"},{"location":"#ready-to-get-started","title":"Ready to get started?","text":"<p>You can download the 3D designs, follow the instructions to assemble your FOSSBot, and dive into programming with our easy-to-use platform. Whether you\u2019re a student, teacher, or just curious, FOSSBot is a fun way to explore the world of robotics!</p> <p>Check out the User Guide for assembly tips or head to the Developper section if you want to contribute or explore the advanced features.</p>"},{"location":"assembly-instructions/","title":"Assembly","text":""},{"location":"dev/","title":"Developers","text":"<p>Welcome, developers! This section is for those interested in contributing to FOSSBot\u2019s development, whether by improving the hardware or enhancing the software.</p>"},{"location":"dev/#getting-started","title":"Getting Started","text":"<pre><code>git clone https://github.com/FOSSBot/FOSSBot.git\n</code></pre>"},{"location":"electronics-wiring/","title":"Electronics","text":""},{"location":"first-setup/","title":"Getting started","text":""},{"location":"guide/","title":"FOSSBot User Guide","text":"<p>Welcome to the FOSSBot User Guide! This guide will help you with everything you need to build, set up, and program your FOSSBot. Whether you are assembling your robot for the first time or troubleshooting an issue, this guide has got you covered. </p> <p>Below, you will find links to each section of the guide based on the task you need help with. Click on any section to get detailed step-by-step instructions.</p>"},{"location":"guide/#first-setup","title":"First Setup","text":"<p>If your Fossbot is already assembled, this section will guide you through the first setup process, to setup the WiFi and connect to the robot programming platform Read First Setup Instructions</p>"},{"location":"guide/#simulator-setup","title":"Simulator setup","text":"<p>Learn how to install the Fossbot application to start programming without the physical robot. This will guide you through the install of the Coppelia simulator and the fossbot app. Read Assembly Instructions</p>"},{"location":"guide/#assembly-instructions","title":"Assembly Instructions","text":"<p>Learn how to 3D print and assemble your FOSSBot robot. This section covers everything from printing the plastic parts to securing the motors and electronics inside the robot\u2019s chassis. Read Assembly Instructions</p>"},{"location":"guide/#electronics-wiring","title":"Electronics Wiring","text":"<p>Need help connecting the electronics? This section walks you through the process of wiring the Raspberry Pi, sensors, motors, and LEDs to ensure everything is correctly set up. Read Electronics Wiring Guide</p>"},{"location":"guide/#programming","title":"Programming","text":"<p>Ready to start controlling your robot? Learn how to program the FOSSBot using the no-coding mode, block-based coding (Blockly), or Python. We\u2019ll also cover how to test your programs using the simulator. Read Programming Guide</p>"},{"location":"guide/#troubleshooting","title":"Troubleshooting","text":"<p>Running into issues? This section provides solutions to common problems such as motor calibration, sensor alignment, or software bugs. Read Troubleshooting Guide</p>"},{"location":"programming/","title":"Programming","text":""}]}